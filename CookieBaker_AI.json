{
  "name": "CookieBaker-AI",
  "nodes": [
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "290bd9ba-fbfa-4ab4-ab33-0cc2e7ad5635",
              "leftValue": "={{ $json.query.media }}",
              "rightValue": 0,
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "55057540-6a36-47f1-ae9e-d5ba5f0e7cf3",
      "name": "If media URL",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        580,
        560
      ]
    },
    {
      "parameters": {
        "command": "echo \"test\""
      },
      "id": "44ef36b8-5cca-42d8-ae97-6a33bf9d979e",
      "name": "Media tokenization layer",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        800,
        420
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "00d4c97b-7ade-4ef7-a2c6-3bf8437a2da9",
              "leftValue": "={{ $json.query.sfw }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "id": "733ff2af-6324-4c6b-a613-c5c1f804e2cc",
      "name": "SFW/NSFW",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1220,
        580
      ]
    },
    {
      "parameters": {},
      "id": "da8d17cf-3e76-4fdd-a3eb-3f3a4b7684f2",
      "name": "Error Trigger",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        120,
        100
      ]
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "mode": "list",
          "value": ""
        }
      },
      "id": "cd31de80-32f4-4286-9351-6bfb15184bfc",
      "name": "Log error",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        580,
        100
      ],
      "credentials": {
        "postgres": {
          "id": "1HXosNollNYXWPfJ",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "mode": "list",
          "value": ""
        }
      },
      "id": "12e14126-a99c-4414-98f2-e62d5fddb453",
      "name": "Log metadata",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        300,
        380
      ],
      "credentials": {
        "postgres": {
          "id": "1HXosNollNYXWPfJ",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "mode": "list",
          "value": ""
        }
      },
      "id": "80c00307-5e47-41c9-bf00-e156cc24692c",
      "name": "Log extracted text",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        980,
        260
      ],
      "credentials": {
        "postgres": {
          "id": "1HXosNollNYXWPfJ",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "path": "speech_to_text",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "ca10225a-0cb7-4fbe-b76e-0f6daf1f4484",
      "name": "/speech_to_text",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        120,
        860
      ],
      "webhookId": "9ca8a9d9-1d4f-41c2-86e4-9a1e43e22f55",
      "notesInFlow": false
    },
    {
      "parameters": {
        "path": "logs/error",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "02148f93-2a3e-4705-9104-1633eb4033b8",
      "name": "/logs/error",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        120,
        2080
      ],
      "webhookId": "9ca8a9d9-1d4f-41c2-86e4-9a1e43e22f55",
      "notesInFlow": false
    },
    {
      "parameters": {
        "path": "logs/metadata",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "117335c4-d026-4a62-a410-6bbc5e2e8e4b",
      "name": "/logs/metadata",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        120,
        2260
      ],
      "webhookId": "9ca8a9d9-1d4f-41c2-86e4-9a1e43e22f55",
      "notesInFlow": false
    },
    {
      "parameters": {
        "path": "logs/media",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "f660ff96-832a-41dc-bebc-25a33b01f833",
      "name": "/logs/media",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        120,
        2440
      ],
      "webhookId": "9ca8a9d9-1d4f-41c2-86e4-9a1e43e22f55",
      "notesInFlow": false
    },
    {
      "parameters": {
        "multipleMethods": true,
        "httpMethod": [
          "POST",
          "PUT",
          "GET"
        ],
        "path": "commands",
        "options": {}
      },
      "id": "dd1a4999-58a4-4043-8e3e-c21259d466ca",
      "name": "/commands",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        120,
        1180
      ],
      "webhookId": "6b67c935-685a-4fe3-aa4d-9fc7adbda00f"
    },
    {
      "parameters": {
        "multipleMethods": true,
        "httpMethod": [
          "POST",
          "PUT",
          "GET"
        ],
        "path": "client_metadata",
        "options": {}
      },
      "id": "8241e0bd-9bda-4b92-a3de-82ebb087395b",
      "name": "/client_metadata",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        120,
        1720
      ],
      "webhookId": "6b67c935-685a-4fe3-aa4d-9fc7adbda00f"
    },
    {
      "parameters": {
        "respondWith": "json",
        "options": {}
      },
      "id": "d81d1396-633c-4de7-8cdf-a4e40b5ca09f",
      "name": "Respond to Webhook3",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        640,
        2080
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "options": {}
      },
      "id": "c376c7ea-8396-4e64-8a53-93dec38c1143",
      "name": "Respond to Webhook4",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        640,
        2260
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "options": {}
      },
      "id": "b7a2b3c9-aec4-40ab-a7e0-1d11bc79c93d",
      "name": "Respond to Webhook5",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        640,
        2440
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "options": {}
      },
      "id": "716f323c-ed9b-403c-86a0-4c4e70492952",
      "name": "Respond to Webhook6",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        640,
        2620
      ]
    },
    {
      "parameters": {
        "command": "echo \"test\""
      },
      "id": "adeac90a-7a8a-4c71-bf45-c66f92f5a912",
      "name": "STT",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        360,
        860
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "options": {}
      },
      "id": "ced7b15a-0ac4-4fe6-b3ca-fe8bcd1b8696",
      "name": "Respond to Webhook7",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        640,
        860
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "options": {}
      },
      "id": "dae4673d-2397-4384-a102-b9d4d597b10d",
      "name": "Respond to Webhook8",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        640,
        1720
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "options": {}
      },
      "id": "49cf696a-da73-42ab-98d7-626b0afbecf2",
      "name": "Respond to Webhook9",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        640,
        1180
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "options": {}
      },
      "id": "dd754e49-8a33-455f-8170-b437b1249332",
      "name": "Respond to Webhook10",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        360,
        100
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "options": {}
      },
      "id": "9f1fd43a-1d7c-4d89-a1c5-f59a7881ce5c",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        2140,
        500
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "1dfb9a89-ef68-448e-80d6-5d0994c70050",
      "name": "SFW responder",
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        1460,
        520
      ],
      "credentials": {
        "ollamaApi": {
          "id": "xHuYe0MDGOs9IpBW",
          "name": "Local Ollama service"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "e076bb2e-8165-4ca6-a20d-19787b4745a6",
      "name": "NSFW Responder",
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        1460,
        860
      ],
      "credentials": {
        "ollamaApi": {
          "id": "xHuYe0MDGOs9IpBW",
          "name": "Local Ollama service"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey"
      },
      "id": "fb8cff9c-7b65-43ee-b68a-49cdb6d5d6e5",
      "name": "Postgres Chat Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.1,
      "position": [
        1800,
        940
      ],
      "credentials": {
        "postgres": {
          "id": "1HXosNollNYXWPfJ",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {},
      "id": "ab225cb2-ba00-4998-9701-54df066d9a7a",
      "name": "Vector Store Tool",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        2060,
        880
      ]
    },
    {
      "parameters": {},
      "id": "8f97956f-6d90-4f1a-be41-05e1051ceb3b",
      "name": "Embeddings",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOllama",
      "typeVersion": 1,
      "position": [
        2360,
        1240
      ],
      "credentials": {
        "ollamaApi": {
          "id": "xHuYe0MDGOs9IpBW",
          "name": "Local Ollama service"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "63844d37-499f-4131-8f9c-44153f8749b7",
      "name": "VectorStore Model",
      "type": "@n8n/n8n-nodes-langchain.lmOllama",
      "typeVersion": 1,
      "position": [
        2240,
        1020
      ],
      "credentials": {
        "ollamaApi": {
          "id": "xHuYe0MDGOs9IpBW",
          "name": "Local Ollama service"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "74c83782-a191-4dbe-be86-b72408306e91",
      "name": "SerpAPI",
      "type": "@n8n/n8n-nodes-langchain.toolSerpApi",
      "typeVersion": 1,
      "position": [
        2300,
        880
      ]
    },
    {
      "parameters": {
        "path": "response",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "aa62f0de-5eea-4a90-b9e1-bcdf11b41741",
      "name": "/response",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        120,
        560
      ],
      "webhookId": "9ca8a9d9-1d4f-41c2-86e4-9a1e43e22f55",
      "notesInFlow": false
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "options": {}
      },
      "id": "135d2cbc-42cc-479b-beb0-d2ab49148497",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        2440,
        660
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "12542cd5-0f90-4583-9204-241182755902",
      "name": "Recursive Character Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        2440,
        780
      ]
    },
    {
      "parameters": {
        "mode": "insert",
        "qdrantCollection": {
          "__rl": true,
          "mode": "list",
          "value": ""
        },
        "options": {}
      },
      "id": "d409caac-af3b-4a7c-95e7-01ee13f4c69b",
      "name": "Qdrant Insert",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "typeVersion": 1,
      "position": [
        2360,
        500
      ],
      "credentials": {
        "qdrantApi": {
          "id": "sFfERYppMeBnFNeA",
          "name": "Local QdrantApi database"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "mode": "list",
          "value": ""
        }
      },
      "id": "f97b699a-589c-44b7-8dbb-4407a7ce45aa",
      "name": "Get Client Metadata",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        300,
        560
      ],
      "credentials": {
        "postgres": {
          "id": "1HXosNollNYXWPfJ",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "path": "logs/responses",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "90264f2a-82f4-487e-a8fc-e16e73be23a9",
      "name": "/logs/chat",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        120,
        2620
      ],
      "webhookId": "9ca8a9d9-1d4f-41c2-86e4-9a1e43e22f55",
      "notesInFlow": false
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "mode": "list",
          "value": ""
        }
      },
      "id": "ab36d84b-be7f-4606-bd12-edd5ed1afb49",
      "name": "get chat logs",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        360,
        2620
      ],
      "credentials": {
        "postgres": {
          "id": "1HXosNollNYXWPfJ",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "mode": "list",
          "value": ""
        }
      },
      "id": "2746616a-d43d-4285-952b-ca08a72520b8",
      "name": "get media logs",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        360,
        2440
      ],
      "credentials": {
        "postgres": {
          "id": "1HXosNollNYXWPfJ",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "mode": "list",
          "value": ""
        }
      },
      "id": "b64f4252-d987-4fb8-a14c-6365c72b39be",
      "name": "get metadata logs",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        360,
        2260
      ],
      "credentials": {
        "postgres": {
          "id": "1HXosNollNYXWPfJ",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "mode": "list",
          "value": ""
        }
      },
      "id": "dff61f07-56aa-4a64-9f9f-081e1d359a46",
      "name": "get error logs",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        360,
        2080
      ],
      "credentials": {
        "postgres": {
          "id": "1HXosNollNYXWPfJ",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "mode": "list",
          "value": ""
        }
      },
      "id": "5c9401ea-4810-43bf-b7f1-b4600b9865a7",
      "name": "get client metadata",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        360,
        1880
      ],
      "credentials": {
        "postgres": {
          "id": "1HXosNollNYXWPfJ",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "mode": "list",
          "value": ""
        }
      },
      "id": "ef898970-49af-41ed-aab3-7c1264e1cec1",
      "name": "update client metadata",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        360,
        1720
      ],
      "credentials": {
        "postgres": {
          "id": "1HXosNollNYXWPfJ",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "mode": "list",
          "value": ""
        }
      },
      "id": "b829b7fd-21c0-49b5-b089-a9150beb96bc",
      "name": "create client metadata",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        360,
        1560
      ],
      "credentials": {
        "postgres": {
          "id": "1HXosNollNYXWPfJ",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "mode": "list",
          "value": ""
        }
      },
      "id": "c0ca0a88-2f57-4f48-af8d-6c11c80732d3",
      "name": "get available commands",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        360,
        1340
      ],
      "credentials": {
        "postgres": {
          "id": "1HXosNollNYXWPfJ",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "mode": "list",
          "value": ""
        }
      },
      "id": "c6851f5a-6851-4bba-8e01-446f4a7da099",
      "name": "update available commands",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        360,
        1180
      ],
      "credentials": {
        "postgres": {
          "id": "1HXosNollNYXWPfJ",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "mode": "list",
          "value": ""
        }
      },
      "id": "bac2eeef-2cec-4b7d-ab5d-4b5542894394",
      "name": "create available commands",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        360,
        1020
      ],
      "credentials": {
        "postgres": {
          "id": "1HXosNollNYXWPfJ",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "27dd930a-fdaa-4bda-9f52-7e592c64c26e",
      "name": "Update prompt end",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        980,
        420
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "b7f6b84c-5b61-4d31-9b37-ca6ddfca8f2a",
      "name": "Update prompt beginning",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        440,
        560
      ]
    },
    {
      "parameters": {
        "qdrantCollection": {
          "__rl": true,
          "mode": "list",
          "value": ""
        },
        "options": {}
      },
      "id": "d287aef8-e544-4c7e-b66f-b6c7ed1ebb5c",
      "name": "Qdrant Retrieve",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "typeVersion": 1,
      "position": [
        2000,
        1020
      ],
      "credentials": {
        "qdrantApi": {
          "id": "sFfERYppMeBnFNeA",
          "name": "Local QdrantApi database"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "18419240-ad7e-434d-bf01-f2c36cc1b15e",
      "name": "Response layer NSFW",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        1440,
        700
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "88139251-cc17-40b3-8748-7fbf3a018886",
      "name": "Response layer SFW",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        1440,
        360
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {},
      "id": "8537afb3-8ee2-4b92-ab1f-448035ab6b50",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        2140,
        280
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "mode": "list",
          "value": ""
        }
      },
      "id": "0c9d3913-a4ad-43cb-a122-f32b0f450b5f",
      "name": "Get Available Commands",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        2380,
        280
      ],
      "credentials": {
        "postgres": {
          "id": "1HXosNollNYXWPfJ",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {}
          ]
        },
        "options": {}
      },
      "id": "8fe22ee0-3aac-436b-8da5-a91fcdd5c6a4",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        2600,
        280
      ]
    },
    {
      "parameters": {
        "name": "get_commands",
        "workflowId": {
          "__rl": true,
          "value": "mywj1XM6RPnWoVNB",
          "mode": "list",
          "cachedResultName": "CookieBaker-AI"
        }
      },
      "id": "ea1521b8-05c5-4309-b2fb-d2b958c0776f",
      "name": "Get Commands",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        1960,
        880
      ]
    }
  ],
  "pinData": {
    "/speech_to_text": [
      {
        "json": {
          "headers": {
            "host": "localhost:5678",
            "user-agent": "python-requests/2.32.3",
            "accept-encoding": "gzip, deflate",
            "accept": "*/*",
            "connection": "keep-alive"
          },
          "params": {},
          "query": {
            "sfw": "True",
            "chat_title": "Test Chat",
            "chat_description": "This is a test chat description",
            "prompt": "Test prompt for chatbot",
            "sender_name": "Test User",
            "sender_isadmin": "False",
            "media": ""
          },
          "body": {},
          "webhookUrl": "http://localhost:5678/webhook-test/response",
          "executionMode": "test"
        }
      }
    ],
    "/logs/error": [
      {
        "json": {
          "headers": {
            "host": "localhost:5678",
            "user-agent": "python-requests/2.32.3",
            "accept-encoding": "gzip, deflate",
            "accept": "*/*",
            "connection": "keep-alive"
          },
          "params": {},
          "query": {
            "sfw": "True",
            "chat_title": "Test Chat",
            "chat_description": "This is a test chat description",
            "prompt": "Test prompt for chatbot",
            "sender_name": "Test User",
            "sender_isadmin": "False",
            "media": ""
          },
          "body": {},
          "webhookUrl": "http://localhost:5678/webhook-test/response",
          "executionMode": "test"
        }
      }
    ],
    "/logs/metadata": [
      {
        "json": {
          "headers": {
            "host": "localhost:5678",
            "user-agent": "python-requests/2.32.3",
            "accept-encoding": "gzip, deflate",
            "accept": "*/*",
            "connection": "keep-alive"
          },
          "params": {},
          "query": {
            "sfw": "True",
            "chat_title": "Test Chat",
            "chat_description": "This is a test chat description",
            "prompt": "Test prompt for chatbot",
            "sender_name": "Test User",
            "sender_isadmin": "False",
            "media": ""
          },
          "body": {},
          "webhookUrl": "http://localhost:5678/webhook-test/response",
          "executionMode": "test"
        }
      }
    ],
    "/logs/media": [
      {
        "json": {
          "headers": {
            "host": "localhost:5678",
            "user-agent": "python-requests/2.32.3",
            "accept-encoding": "gzip, deflate",
            "accept": "*/*",
            "connection": "keep-alive"
          },
          "params": {},
          "query": {
            "sfw": "True",
            "chat_title": "Test Chat",
            "chat_description": "This is a test chat description",
            "prompt": "Test prompt for chatbot",
            "sender_name": "Test User",
            "sender_isadmin": "False",
            "media": ""
          },
          "body": {},
          "webhookUrl": "http://localhost:5678/webhook-test/response",
          "executionMode": "test"
        }
      }
    ],
    "/response": [
      {
        "json": {
          "headers": {
            "host": "localhost:5678",
            "user-agent": "python-requests/2.32.3",
            "accept-encoding": "gzip, deflate",
            "accept": "*/*",
            "connection": "keep-alive"
          },
          "params": {},
          "query": {
            "sfw": "True",
            "chat_title": "Test Chat",
            "chat_description": "This is a test chat description",
            "prompt": "Test prompt for chatbot",
            "sender_name": "Test User",
            "sender_isadmin": "False",
            "media": ""
          },
          "body": {},
          "webhookUrl": "http://localhost:5678/webhook-test/response",
          "executionMode": "test"
        }
      }
    ],
    "/logs/chat": [
      {
        "json": {
          "headers": {
            "host": "localhost:5678",
            "user-agent": "python-requests/2.32.3",
            "accept-encoding": "gzip, deflate",
            "accept": "*/*",
            "connection": "keep-alive"
          },
          "params": {},
          "query": {
            "sfw": "True",
            "chat_title": "Test Chat",
            "chat_description": "This is a test chat description",
            "prompt": "Test prompt for chatbot",
            "sender_name": "Test User",
            "sender_isadmin": "False",
            "media": ""
          },
          "body": {},
          "webhookUrl": "http://localhost:5678/webhook-test/response",
          "executionMode": "test"
        }
      }
    ]
  },
  "connections": {
    "If media URL": {
      "main": [
        [
          {
            "node": "Media tokenization layer",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SFW/NSFW",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Media tokenization layer": {
      "main": [
        [
          {
            "node": "Update prompt end",
            "type": "main",
            "index": 0
          },
          {
            "node": "Log extracted text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SFW/NSFW": {
      "main": [
        [
          {
            "node": "Response layer SFW",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Response layer NSFW",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Trigger": {
      "main": [
        [
          {
            "node": "Respond to Webhook10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "/logs/error": {
      "main": [
        [
          {
            "node": "get error logs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "/logs/metadata": {
      "main": [
        [
          {
            "node": "get metadata logs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "/logs/media": {
      "main": [
        [
          {
            "node": "get media logs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "/speech_to_text": {
      "main": [
        [
          {
            "node": "STT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "STT": {
      "main": [
        [
          {
            "node": "Respond to Webhook7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "/client_metadata": {
      "main": [
        [
          {
            "node": "create client metadata",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "update client metadata",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get client metadata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "/commands": {
      "main": [
        [
          {
            "node": "create available commands",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "update available commands",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get available commands",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SFW responder": {
      "ai_languageModel": [
        [
          {
            "node": "Response layer SFW",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "NSFW Responder": {
      "ai_languageModel": [
        [
          {
            "node": "Response layer NSFW",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Response layer SFW",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Response layer NSFW",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Vector Store Tool": {
      "ai_tool": [
        [
          {
            "node": "Response layer SFW",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Response layer NSFW",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings": {
      "ai_embedding": [
        [
          {
            "node": "Qdrant Retrieve",
            "type": "ai_embedding",
            "index": 0
          },
          {
            "node": "Qdrant Insert",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "VectorStore Model": {
      "ai_languageModel": [
        [
          {
            "node": "Vector Store Tool",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "SerpAPI": {
      "ai_tool": [
        [
          {
            "node": "Response layer SFW",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Response layer NSFW",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "/response": {
      "main": [
        [
          {
            "node": "Get Client Metadata",
            "type": "main",
            "index": 0
          },
          {
            "node": "Log metadata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook": {
      "main": [
        [
          {
            "node": "Qdrant Insert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook10": {
      "main": [
        [
          {
            "node": "Log error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Qdrant Insert",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Get Client Metadata": {
      "main": [
        [
          {
            "node": "Update prompt beginning",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "/logs/chat": {
      "main": [
        [
          {
            "node": "get chat logs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get chat logs": {
      "main": [
        [
          {
            "node": "Respond to Webhook6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get media logs": {
      "main": [
        [
          {
            "node": "Respond to Webhook5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get metadata logs": {
      "main": [
        [
          {
            "node": "Respond to Webhook4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get error logs": {
      "main": [
        [
          {
            "node": "Respond to Webhook3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get client metadata": {
      "main": [
        [
          {
            "node": "Respond to Webhook8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update client metadata": {
      "main": [
        [
          {
            "node": "Respond to Webhook8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "create client metadata": {
      "main": [
        [
          {
            "node": "Respond to Webhook8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get available commands": {
      "main": [
        [
          {
            "node": "Respond to Webhook9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update available commands": {
      "main": [
        [
          {
            "node": "Respond to Webhook9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "create available commands": {
      "main": [
        [
          {
            "node": "Respond to Webhook9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update prompt beginning": {
      "main": [
        [
          {
            "node": "If media URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Qdrant Retrieve": {
      "ai_vectorStore": [
        [
          {
            "node": "Vector Store Tool",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Update prompt end": {
      "main": [
        [
          {
            "node": "SFW/NSFW",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Response layer NSFW": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Response layer SFW": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Get Available Commands",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Available Commands": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Commands": {
      "ai_tool": [
        [
          {
            "node": "Response layer SFW",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Response layer NSFW",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "timezone": "America/Sao_Paulo",
    "saveManualExecutions": false,
    "callerPolicy": "workflowsFromSameOwner",
    "executionTimeout": 300,
    "errorWorkflow": "mywj1XM6RPnWoVNB",
    "saveDataErrorExecution": "none",
    "saveDataSuccessExecution": "none"
  },
  "versionId": "fdfa5bbd-f642-415b-b5b5-8201bca92ad2",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "558d88703fb65b2d0e44613bc35916258b0f0bf983c5d4730c00c424b77ca36a"
  },
  "id": "mywj1XM6RPnWoVNB",
  "tags": []
}