{
  "name": "CookieBaker-AI",
  "nodes": [
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "290bd9ba-fbfa-4ab4-ab33-0cc2e7ad5635",
              "leftValue": "={{ $('/response').item.json.query.media }}",
              "rightValue": 0,
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "55057540-6a36-47f1-ae9e-d5ba5f0e7cf3",
      "name": "If media URL",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        340,
        560
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "00d4c97b-7ade-4ef7-a2c6-3bf8437a2da9",
              "leftValue": "={{ $('/response').item.json.query.sfw }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "id": "733ff2af-6324-4c6b-a613-c5c1f804e2cc",
      "name": "SFW/NSFW",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1100,
        820
      ]
    },
    {
      "parameters": {},
      "id": "da8d17cf-3e76-4fdd-a3eb-3f3a4b7684f2",
      "name": "Error Trigger",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        1760,
        -300
      ]
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "logs",
          "mode": "list",
          "cachedResultName": "logs"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "log_data": "={{ $json.execution.error }}",
            "log_type": "error",
            "chat_id": "ERROR",
            "client_name": "ERROR"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "client_name",
              "displayName": "client_name",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "chat_id",
              "displayName": "chat_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "log_type",
              "displayName": "log_type",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "log_data",
              "displayName": "log_data",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "cd31de80-32f4-4286-9351-6bfb15184bfc",
      "name": "Log error",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        2220,
        -300
      ],
      "credentials": {
        "postgres": {
          "id": "1HXosNollNYXWPfJ",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $('get error logs').item.json }}",
        "options": {}
      },
      "id": "d81d1396-633c-4de7-8cdf-a4e40b5ca09f",
      "name": "Respond to Webhook3",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        640,
        1380
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $('get metadata logs').item.json }}",
        "options": {}
      },
      "id": "c376c7ea-8396-4e64-8a53-93dec38c1143",
      "name": "Respond to Webhook4",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        640,
        1560
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $('get media logs').item.json }}",
        "options": {}
      },
      "id": "b7a2b3c9-aec4-40ab-a7e0-1d11bc79c93d",
      "name": "Respond to Webhook5",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        640,
        1740
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $('get chat logs').item.json }}",
        "options": {}
      },
      "id": "716f323c-ed9b-403c-86a0-4c4e70492952",
      "name": "Respond to Webhook6",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        640,
        1920
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $('update available commands').item.json }}",
        "options": {}
      },
      "id": "49cf696a-da73-42ab-98d7-626b0afbecf2",
      "name": "Respond to Webhook9",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        640,
        980
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $('Response step NSFW').item.json }}",
        "options": {}
      },
      "id": "9f1fd43a-1d7c-4d89-a1c5-f59a7881ce5c",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        2060,
        760
      ]
    },
    {
      "parameters": {
        "model": "MekhyW/cookiebaker-sfw:latest",
        "options": {}
      },
      "id": "1dfb9a89-ef68-448e-80d6-5d0994c70050",
      "name": "SFW responder",
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        1120,
        520
      ],
      "credentials": {
        "ollamaApi": {
          "id": "xHuYe0MDGOs9IpBW",
          "name": "Local Ollama service"
        }
      }
    },
    {
      "parameters": {
        "model": "MekhyW/cookiebaker-nsfw:latest",
        "options": {}
      },
      "id": "e076bb2e-8165-4ca6-a20d-19787b4745a6",
      "name": "NSFW Responder",
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        1120,
        660
      ],
      "credentials": {
        "ollamaApi": {
          "id": "xHuYe0MDGOs9IpBW",
          "name": "Local Ollama service"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('/response').item.json.query.chat_id }}",
        "contextWindowLength": 10
      },
      "id": "fb8cff9c-7b65-43ee-b68a-49cdb6d5d6e5",
      "name": "Postgres Chat Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.1,
      "position": [
        1820,
        1240
      ],
      "credentials": {
        "postgres": {
          "id": "1HXosNollNYXWPfJ",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "74c83782-a191-4dbe-be86-b72408306e91",
      "name": "SerpAPI",
      "type": "@n8n/n8n-nodes-langchain.toolSerpApi",
      "typeVersion": 1,
      "position": [
        2040,
        1140
      ],
      "credentials": {
        "serpApi": {
          "id": "XOWma2xUsEl30feb",
          "name": "SerpAPI account"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "logs",
          "mode": "list",
          "cachedResultName": "logs"
        },
        "where": {
          "values": [
            {
              "column": "log_type",
              "value": "chat"
            },
            {
              "column": "client_name",
              "value": "={{ $json.query.client_name }}"
            }
          ]
        },
        "sort": {
          "values": [
            {
              "column": "id",
              "direction": "DESC"
            }
          ]
        },
        "options": {
          "outputColumns": [
            "id",
            "log_data",
            "chat_id"
          ]
        }
      },
      "id": "ab36d84b-be7f-4606-bd12-edd5ed1afb49",
      "name": "get chat logs",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        360,
        1920
      ],
      "credentials": {
        "postgres": {
          "id": "1HXosNollNYXWPfJ",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "logs",
          "mode": "list",
          "cachedResultName": "logs"
        },
        "where": {
          "values": [
            {
              "column": "log_type",
              "value": "media"
            },
            {
              "column": "client_name",
              "value": "={{ $json.query.client_name }}"
            }
          ]
        },
        "sort": {
          "values": [
            {
              "column": "id",
              "direction": "DESC"
            }
          ]
        },
        "options": {
          "outputColumns": [
            "id",
            "log_data",
            "chat_id"
          ]
        }
      },
      "id": "2746616a-d43d-4285-952b-ca08a72520b8",
      "name": "get media logs",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        360,
        1740
      ],
      "credentials": {
        "postgres": {
          "id": "1HXosNollNYXWPfJ",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "logs",
          "mode": "list",
          "cachedResultName": "logs"
        },
        "where": {
          "values": [
            {
              "column": "log_type",
              "value": "metadata"
            },
            {
              "column": "client_name",
              "value": "={{ $json.query.client_name }}"
            }
          ]
        },
        "sort": {
          "values": [
            {
              "column": "id",
              "direction": "DESC"
            }
          ]
        },
        "options": {
          "outputColumns": [
            "id",
            "log_data",
            "chat_id"
          ]
        }
      },
      "id": "b64f4252-d987-4fb8-a14c-6365c72b39be",
      "name": "get metadata logs",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        360,
        1560
      ],
      "credentials": {
        "postgres": {
          "id": "1HXosNollNYXWPfJ",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "logs",
          "mode": "list",
          "cachedResultName": "logs"
        },
        "where": {
          "values": [
            {
              "column": "log_type",
              "value": "error"
            }
          ]
        },
        "sort": {
          "values": [
            {
              "column": "id",
              "direction": "DESC"
            }
          ]
        },
        "options": {
          "outputColumns": [
            "id",
            "log_data"
          ]
        }
      },
      "id": "dff61f07-56aa-4a64-9f9f-081e1d359a46",
      "name": "get error logs",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        360,
        1380
      ],
      "credentials": {
        "postgres": {
          "id": "1HXosNollNYXWPfJ",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "client_commands",
          "mode": "list",
          "cachedResultName": "client_commands"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "client_name",
              "value": "={{ $json.query.client_name }}"
            }
          ]
        },
        "options": {
          "outputColumns": [
            "client_commands"
          ]
        }
      },
      "id": "c0ca0a88-2f57-4f48-af8d-6c11c80732d3",
      "name": "get available commands",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        360,
        1140
      ],
      "credentials": {
        "postgres": {
          "id": "1HXosNollNYXWPfJ",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "client_commands",
          "mode": "list",
          "cachedResultName": "client_commands"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "client_name": "={{ $json.query.client_name }}",
            "client_commands": "={{ $json.query.commands }}"
          },
          "matchingColumns": [
            "client_name"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "client_name",
              "displayName": "client_name",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "client_commands",
              "displayName": "client_commands",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "c6851f5a-6851-4bba-8e01-446f4a7da099",
      "name": "update available commands",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        360,
        980
      ],
      "credentials": {
        "postgres": {
          "id": "1HXosNollNYXWPfJ",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "client_commands",
          "mode": "list",
          "cachedResultName": "client_commands"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "client_name": "={{ $json.query.client_name }}",
            "client_commands": "={{ $json.query.commands }}",
            "id": "={{ $json.query.unique_id }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "client_name",
              "displayName": "client_name",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "client_commands",
              "displayName": "client_commands",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": false
            }
          ]
        },
        "options": {}
      },
      "id": "bac2eeef-2cec-4b7d-ab5d-4b5542894394",
      "name": "create available commands",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        360,
        820
      ],
      "credentials": {
        "postgres": {
          "id": "1HXosNollNYXWPfJ",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {},
      "id": "8537afb3-8ee2-4b92-ab1f-448035ab6b50",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        1760,
        -100
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "client_commands",
          "mode": "list",
          "cachedResultName": "client_commands"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "client_name",
              "value": "={{ $('/response').item.json.query.client_name }}"
            }
          ]
        },
        "options": {
          "outputColumns": [
            "client_commands"
          ]
        }
      },
      "id": "0c9d3913-a4ad-43cb-a122-f32b0f450b5f",
      "name": "Get Available Commands",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        2000,
        -100
      ],
      "credentials": {
        "postgres": {
          "id": "1HXosNollNYXWPfJ",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "commands",
        "options": {}
      },
      "id": "8fe22ee0-3aac-436b-8da5-a91fcdd5c6a4",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        2220,
        -100
      ]
    },
    {
      "parameters": {
        "name": "get_commands",
        "description": "Call this tool to get a list of commands that can be executed, including their descriptions and parameters.",
        "workflowId": {
          "__rl": true,
          "value": "mywj1XM6RPnWoVNB",
          "mode": "list",
          "cachedResultName": "CookieBaker-AI"
        },
        "responsePropertyName": "commands",
        "fields": {
          "values": [
            {
              "name": "client_name",
              "stringValue": "={{ $('/response').item.json.query.client_name }}"
            }
          ]
        }
      },
      "id": "ea1521b8-05c5-4309-b2fb-d2b958c0776f",
      "name": "Get Commands",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        1940,
        1140
      ]
    },
    {
      "parameters": {
        "path": "logs/media",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "f660ff96-832a-41dc-bebc-25a33b01f833",
      "name": "/logs/media",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        120,
        1740
      ],
      "webhookId": "9ca8a9d9-1d4f-41c2-86e4-9a1e43e22f55",
      "notesInFlow": false
    },
    {
      "parameters": {
        "path": "logs/metadata",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "117335c4-d026-4a62-a410-6bbc5e2e8e4b",
      "name": "/logs/metadata",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        120,
        1560
      ],
      "webhookId": "9ca8a9d9-1d4f-41c2-86e4-9a1e43e22f55",
      "notesInFlow": false
    },
    {
      "parameters": {
        "path": "logs/chat",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "90264f2a-82f4-487e-a8fc-e16e73be23a9",
      "name": "/logs/chat",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        120,
        1920
      ],
      "webhookId": "9ca8a9d9-1d4f-41c2-86e4-9a1e43e22f55",
      "notesInFlow": false
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "logs",
          "mode": "list",
          "cachedResultName": "logs"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "client_name": "={{ $json.query.client_name }}",
            "chat_id": "={{ $json.query.chat_id }}",
            "log_type": "metadata",
            "log_data": "={{ $json.query }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "client_name",
              "displayName": "client_name",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "chat_id",
              "displayName": "chat_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "log_type",
              "displayName": "log_type",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "log_data",
              "displayName": "log_data",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "53dc3356-eef0-46a7-81d6-571e249d5ec3",
      "name": "Log metadata",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        340,
        380
      ],
      "credentials": {
        "postgres": {
          "id": "1HXosNollNYXWPfJ",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $('Response step SFW').item.json }}",
        "options": {}
      },
      "id": "570928f7-e36b-4ec5-9b45-eb5d76c78381",
      "name": "Respond to Webhook1",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        2060,
        580
      ]
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "logs",
          "mode": "list",
          "cachedResultName": "logs"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "client_name": "={{ $('/response').item.json.query.client_name }}",
            "chat_id": "={{ $('/response').item.json.query.chat_id }}",
            "log_type": "chat",
            "log_data": "={{ $('Response step SFW').item.json }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "client_name",
              "displayName": "client_name",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "chat_id",
              "displayName": "chat_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "log_type",
              "displayName": "log_type",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "log_data",
              "displayName": "log_data",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "d06aee5c-156b-4268-8f98-427c9bb696bb",
      "name": "Log chat response SFW",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        2300,
        580
      ],
      "credentials": {
        "postgres": {
          "id": "1HXosNollNYXWPfJ",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "logs",
          "mode": "list",
          "cachedResultName": "logs"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "client_name": "={{ $('/response').item.json.query.client_name }}",
            "chat_id": "={{ $('/response').item.json.query.chat_id }}",
            "log_type": "chat",
            "log_data": "={{ $('Response step NSFW').item.json }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "client_name",
              "displayName": "client_name",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "chat_id",
              "displayName": "chat_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "log_type",
              "displayName": "log_type",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "log_data",
              "displayName": "log_data",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "bda14bd9-d66c-4aa4-8f39-5b681e4a1825",
      "name": "Log chat response NSFW",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        2300,
        760
      ],
      "credentials": {
        "postgres": {
          "id": "1HXosNollNYXWPfJ",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "multipleMethods": true,
        "httpMethod": [
          "POST",
          "PUT",
          "GET"
        ],
        "path": "commands",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "dd1a4999-58a4-4043-8e3e-c21259d466ca",
      "name": "/commands",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        120,
        980
      ],
      "webhookId": "6b67c935-685a-4fe3-aa4d-9fc7adbda00f"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $('get available commands').item.json }}",
        "options": {}
      },
      "id": "47ceb34b-3e89-4e56-8178-5bef334a158a",
      "name": "Respond to Webhook11",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        640,
        1140
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $('create available commands').item.json }}",
        "options": {}
      },
      "id": "35fdb3b8-bf68-4b9e-b00c-eff4c0326335",
      "name": "Respond to Webhook12",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        640,
        820
      ]
    },
    {
      "parameters": {
        "operation": "resize",
        "width": 1024,
        "height": 1024,
        "options": {}
      },
      "id": "11ab5132-b37b-47ef-b8ba-87c6ce17e395",
      "name": "Resize",
      "type": "n8n-nodes-base.editImage",
      "typeVersion": 1,
      "position": [
        700,
        100
      ]
    },
    {
      "parameters": {
        "url": "={{ $('/response').item.json.query.media }}",
        "options": {}
      },
      "id": "3d812325-d183-45de-8773-f2db825e0c11",
      "name": "Get Image",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        540,
        100
      ]
    },
    {
      "parameters": {
        "model": "llava-phi3:latest",
        "options": {}
      },
      "id": "a21234d3-ff7e-4c68-8a81-2ce15b683f3c",
      "name": "Describer Model",
      "type": "@n8n/n8n-nodes-langchain.lmOllama",
      "typeVersion": 1,
      "position": [
        680,
        480
      ],
      "credentials": {
        "ollamaApi": {
          "id": "xHuYe0MDGOs9IpBW",
          "name": "Local Ollama service"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "logs",
          "mode": "list",
          "cachedResultName": "logs"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "client_name": "={{ $('/response').item.json.query.client_name }}",
            "chat_id": "={{ $('/response').item.json.query.chat_id }}",
            "log_type": "media",
            "log_data": "={{ $('Media tokenization step').item.json }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "client_name",
              "displayName": "client_name",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "chat_id",
              "displayName": "chat_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "log_type",
              "displayName": "log_type",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "log_data",
              "displayName": "log_data",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "80c00307-5e47-41c9-bf00-e156cc24692c",
      "name": "Log caption",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        980,
        160
      ],
      "credentials": {
        "postgres": {
          "id": "1HXosNollNYXWPfJ",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {},
      "id": "6910e426-3934-4067-a1ca-1b3622d0aeaf",
      "name": "Calculator",
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        2140,
        1140
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "00d4c97b-7ade-4ef7-a2c6-3bf8437a2da9",
              "leftValue": "={{ $('/response').item.json.query.sfw }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "id": "b8271e83-167f-4b0f-a6a9-c5f5e5bb0380",
      "name": "SFW/NSFW1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1100,
        320
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $('Response step NSFW1').item.json }}",
        "options": {}
      },
      "id": "ff2340f3-a402-478e-90fd-eadd5198edc4",
      "name": "Respond to Webhook2",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        2060,
        420
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $('Response step SFW1').item.json }}",
        "options": {}
      },
      "id": "d61a34ef-6ed8-4696-a7da-c4ff3232fca5",
      "name": "Respond to Webhook7",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        2060,
        240
      ]
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "logs",
          "mode": "list",
          "cachedResultName": "logs"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "client_name": "={{ $('/response').item.json.query.client_name }}",
            "chat_id": "={{ $('/response').item.json.query.chat_id }}",
            "log_type": "chat",
            "log_data": "={{ $('Response step SFW1').item.json }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "client_name",
              "displayName": "client_name",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "chat_id",
              "displayName": "chat_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "log_type",
              "displayName": "log_type",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "log_data",
              "displayName": "log_data",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "3651fa00-a799-4557-aa27-181898f610e0",
      "name": "Log chat response SFW1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        2300,
        240
      ],
      "credentials": {
        "postgres": {
          "id": "1HXosNollNYXWPfJ",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "logs",
          "mode": "list",
          "cachedResultName": "logs"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "client_name": "={{ $('/response').item.json.query.client_name }}",
            "chat_id": "={{ $('/response').item.json.query.chat_id }}",
            "log_type": "chat",
            "log_data": "={{ $('Response step NSFW1').item.json }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "client_name",
              "displayName": "client_name",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "chat_id",
              "displayName": "chat_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "log_type",
              "displayName": "log_type",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "log_data",
              "displayName": "log_data",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "993ad540-6cf9-4c41-8522-d967ceb52e4c",
      "name": "Log chat response NSFW1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        2300,
        420
      ],
      "credentials": {
        "postgres": {
          "id": "1HXosNollNYXWPfJ",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "path": "response",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "aa62f0de-5eea-4a90-b9e1-bcdf11b41741",
      "name": "/response",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        120,
        560
      ],
      "webhookId": "9ca8a9d9-1d4f-41c2-86e4-9a1e43e22f55",
      "notesInFlow": false
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "Generate a caption for this image. If text is present on the image, include it as well.",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=You role is to provide an appropriate image caption for the user provided image. The image could be a photo, a meme, a screenshot, a drawing, or maybe something else entirely. In any case, include relevant text visible on the image, if present."
            },
            {
              "type": "HumanMessagePromptTemplate",
              "messageType": "imageBinary"
            }
          ]
        }
      },
      "id": "06e41f3a-6e03-4b7e-a6e4-f8160d9a5b6a",
      "name": "Media tokenization step",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.4,
      "position": [
        660,
        320
      ]
    },
    {
      "parameters": {
        "agent": "conversationalAgent",
        "promptType": "define",
        "text": "={{ \"You are CookieBot, a furry assistant AI created by Mekhy. Always answer in the same language as the user.\" + \"\\n\" + \"User \" + $('/response').item.json.query.sender_name + \" says: \" + \"'\" + $('/response').item.json.query.prompt + \"'\" + \"\\n\" + \"Your response: \" }}",
        "hasOutputParser": true,
        "options": {}
      },
      "id": "18419240-ad7e-434d-bf01-f2c36cc1b15e",
      "name": "Response step NSFW",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        1340,
        840
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "agent": "conversationalAgent",
        "promptType": "define",
        "text": "={{ \"You are CookieBot, a furry assistant AI created by Mekhy. Always answer in the same language as the user.\" + \"\\n\" + \"User \" + $('/response').item.json.query.sender_name + \" says: \" + \"'\" + $('/response').item.json.query.prompt + \"'\" + \" and included an image with content \" + \"'\" + $json.text + \"'\" + \"\\n\" + \"Your response: \" }}",
        "hasOutputParser": true,
        "options": {}
      },
      "id": "7b4343a3-c3dc-46dc-8dfc-6580de07a6b6",
      "name": "Response step NSFW1",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        1340,
        380
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "agent": "conversationalAgent",
        "promptType": "define",
        "text": "={{ \"You are CookieBot, a furry assistant AI created by Mekhy. Always answer in the same language as the user.\" + \"\\n\" + \"User \" + $('/response').item.json.query.sender_name + \" says: \" + \"'\" + $('/response').item.json.query.prompt + \"'\" + \"\\n\" + \"Your response: \" }}",
        "hasOutputParser": true,
        "options": {}
      },
      "id": "88139251-cc17-40b3-8748-7fbf3a018886",
      "name": "Response step SFW",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        1340,
        640
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "agent": "conversationalAgent",
        "promptType": "define",
        "text": "={{ \"You are CookieBot, a furry assistant AI created by Mekhy. Always answer in the same language as the user.\" + \"\\n\" + \"User \" + $('/response').item.json.query.sender_name + \" says: \" + \"'\" + $('/response').item.json.query.prompt + \"'\" + \" and included an image with content \" + \"'\" + $json.text + \"'\" + \"\\n\" + \"Your response: \" }}",
        "options": {}
      },
      "id": "c1ad0420-81a3-4f00-9f52-a95ffbfaa490",
      "name": "Response step SFW1",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        1340,
        180
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "path": "logs/error",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "02148f93-2a3e-4705-9104-1633eb4033b8",
      "name": "/logs/error",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        120,
        1380
      ],
      "webhookId": "9ca8a9d9-1d4f-41c2-86e4-9a1e43e22f55",
      "notesInFlow": false
    }
  ],
  "pinData": {
    "/logs/media": [
      {
        "json": {
          "headers": {
            "host": "localhost:5678",
            "user-agent": "python-requests/2.32.3",
            "accept-encoding": "gzip, deflate",
            "accept": "*/*",
            "connection": "keep-alive"
          },
          "params": {},
          "query": {
            "sfw": "True",
            "chat_title": "Test Chat",
            "chat_description": "This is a test chat description",
            "prompt": "Test prompt for chatbot",
            "sender_name": "Test User",
            "sender_isadmin": "False",
            "media": ""
          },
          "body": {},
          "webhookUrl": "http://localhost:5678/webhook-test/response",
          "executionMode": "test"
        }
      }
    ],
    "/logs/metadata": [
      {
        "json": {
          "headers": {
            "host": "localhost:5678",
            "user-agent": "python-requests/2.32.3",
            "accept-encoding": "gzip, deflate",
            "accept": "*/*",
            "connection": "keep-alive"
          },
          "params": {},
          "query": {
            "sfw": "True",
            "chat_title": "Test Chat",
            "chat_description": "This is a test chat description",
            "prompt": "Test prompt for chatbot",
            "sender_name": "Test User",
            "sender_isadmin": "False",
            "media": ""
          },
          "body": {},
          "webhookUrl": "http://localhost:5678/webhook-test/response",
          "executionMode": "test"
        }
      }
    ],
    "/logs/chat": [
      {
        "json": {
          "headers": {
            "host": "localhost:5678",
            "user-agent": "python-requests/2.32.3",
            "accept-encoding": "gzip, deflate",
            "accept": "*/*",
            "connection": "keep-alive"
          },
          "params": {},
          "query": {
            "sfw": "True",
            "chat_title": "Test Chat",
            "chat_description": "This is a test chat description",
            "prompt": "Test prompt for chatbot",
            "sender_name": "Test User",
            "sender_isadmin": "False",
            "media": ""
          },
          "body": {},
          "webhookUrl": "http://localhost:5678/webhook-test/response",
          "executionMode": "test"
        }
      }
    ]
  },
  "connections": {
    "If media URL": {
      "main": [
        [
          {
            "node": "Get Image",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SFW/NSFW",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SFW/NSFW": {
      "main": [
        [
          {
            "node": "Response step SFW",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Response step NSFW",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Trigger": {
      "main": [
        [
          {
            "node": "Log error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SFW responder": {
      "ai_languageModel": [
        [
          {
            "node": "Response step SFW",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Response step SFW1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "NSFW Responder": {
      "ai_languageModel": [
        [
          {
            "node": "Response step NSFW",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Response step NSFW1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Response step SFW",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Response step NSFW",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Response step NSFW1",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Response step SFW1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "SerpAPI": {
      "ai_tool": [
        [
          {
            "node": "Response step SFW",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Response step NSFW",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Response step NSFW1",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Response step SFW1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "get chat logs": {
      "main": [
        [
          {
            "node": "Respond to Webhook6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get media logs": {
      "main": [
        [
          {
            "node": "Respond to Webhook5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get metadata logs": {
      "main": [
        [
          {
            "node": "Respond to Webhook4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get error logs": {
      "main": [
        [
          {
            "node": "Respond to Webhook3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get available commands": {
      "main": [
        [
          {
            "node": "Respond to Webhook11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update available commands": {
      "main": [
        [
          {
            "node": "Respond to Webhook9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "create available commands": {
      "main": [
        [
          {
            "node": "Respond to Webhook12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Get Available Commands",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Available Commands": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Commands": {
      "ai_tool": [
        [
          {
            "node": "Response step SFW",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Response step NSFW",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Response step SFW1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "/logs/media": {
      "main": [
        [
          {
            "node": "get media logs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "/logs/metadata": {
      "main": [
        [
          {
            "node": "get metadata logs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "/logs/chat": {
      "main": [
        [
          {
            "node": "get chat logs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook1": {
      "main": [
        [
          {
            "node": "Log chat response SFW",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook": {
      "main": [
        [
          {
            "node": "Log chat response NSFW",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "/commands": {
      "main": [
        [
          {
            "node": "create available commands",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "update available commands",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get available commands",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Resize": {
      "main": [
        [
          {
            "node": "Media tokenization step",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Image": {
      "main": [
        [
          {
            "node": "Resize",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Describer Model": {
      "ai_languageModel": [
        [
          {
            "node": "Media tokenization step",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Calculator": {
      "ai_tool": [
        [
          {
            "node": "Response step SFW",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Response step NSFW",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Response step NSFW1",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Response step SFW1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "SFW/NSFW1": {
      "main": [
        [
          {
            "node": "Response step SFW1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Response step NSFW1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook2": {
      "main": [
        [
          {
            "node": "Log chat response NSFW1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook7": {
      "main": [
        [
          {
            "node": "Log chat response SFW1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "/response": {
      "main": [
        [
          {
            "node": "Log metadata",
            "type": "main",
            "index": 0
          },
          {
            "node": "If media URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Media tokenization step": {
      "main": [
        [
          {
            "node": "Log caption",
            "type": "main",
            "index": 0
          },
          {
            "node": "SFW/NSFW1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Response step NSFW": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Response step NSFW1": {
      "main": [
        [
          {
            "node": "Respond to Webhook2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Response step SFW": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Response step SFW1": {
      "main": [
        [
          {
            "node": "Respond to Webhook7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "/logs/error": {
      "main": [
        [
          {
            "node": "get error logs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1",
    "timezone": "America/Sao_Paulo",
    "saveManualExecutions": false,
    "callerPolicy": "workflowsFromSameOwner",
    "executionTimeout": 300,
    "errorWorkflow": "mywj1XM6RPnWoVNB",
    "saveDataErrorExecution": "none",
    "saveDataSuccessExecution": "none"
  },
  "versionId": "833182f5-057a-49e7-a527-4adedf11dec9",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "558d88703fb65b2d0e44613bc35916258b0f0bf983c5d4730c00c424b77ca36a"
  },
  "id": "mywj1XM6RPnWoVNB",
  "tags": []
}